<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "shop">
	
	<!-- 상품 리스트 1차분류 -->
	<select id="shopList" resultType="com.example.spring03.domain.GoodsViewVO">
		select g.gdsnum, g.gdsname, g.catecode, c.catecoderef, c.catename, g.gdsprice, g.gdsstock, g.gdsdes, g.gdsdate, g.gdsimg, g.gdsthumbimg
		from tbl_goods g inner join goods_category c on g.catecode = c.catecode 
		where g.catecode = #{catecode}
	</select>
	
	<!-- 상품 리스트 2차분류 -->
	<select id="shopList_ref" resultType="com.example.spring03.domain.GoodsViewVO">
		select g.gdsnum, g.gdsname, g.catecode, c.catecoderef, c.catename, g.gdsprice, g.gdsstock, g.gdsdes, g.gdsdate, g.gdsimg, g.gdsthumbimg
		from tbl_goods g inner join goods_category c on g.catecode = c.catecode 
		where g.catecode = #{catecode} or c.catecoderef = #{catecoderef}
	</select>
	
	<!-- 상품 조회 + 카테고리 조인 -->
	<select id="shopView" resultType="com.example.spring03.domain.GoodsViewVO">
		select g.gdsnum, g.gdsname, g.catecode, c.catecoderef, c.catename, g.gdsprice, g.gdsstock, g.gdsdes, g.gdsdate, g.gdsimg, g.gdsthumbimg from tbl_goods g
		inner join goods_category c on g.catecode = c.catecode where g.gdsnum = #{gdsnum}
	</select>
	
	<!-- 댓글 작성 -->
	<insert id="replyInsert" parameterType="com.example.spring03.domain.ReplyVO">
		insert into tbl_reply (gdsnum, userid, repnum, repcon) values (#{gdsnum}, #{userid}, tbl_reply_seq.nextval, #{repcon})
	</insert>
	
	<!-- 댓글 리스트 -->
	<select id="replyList" resultType="com.example.spring03.domain.ReplyListVO">
		select r.gdsnum, r.userid, r.repnum, r.repcon, r.repdate, m.username from tbl_reply r inner join tbl_member m on r.userid = m.userid where gdsnum = #{gdsnum}
	</select>
	
	<!-- 댓글 삭제 -->
	<delete id="replyDelete" parameterType="com.example.spring03.domain.ReplyVO">
		delete from tbl_reply where repnum = #{repnum} and userid = #{userid}
	</delete>
	
	<!-- 댓글 삭제용 유저 체크 -->
	<select id="replyIdCheck" resultType="String">
		select userid from tbl_reply where repnum = #{repnum}
	</select>
	
	<!-- 댓글 수정 -->
	<update id="replyModify" parameterType="com.example.spring03.domain.ReplyVO">
		update tbl_reply set repcon = #{repcon} where repnum = #{repnum} and userid = #{userid}
	</update>
	
	<!-- 카트 담기 -->
	<insert id="cartInsert" parameterType="com.example.spring03.domain.CartVO">
		insert into tbl_cart (cartnum, userid, gdsnum, cartstock) values (tbl_cart_seq.nextval, #{userid}, #{gdsnum}, ${cartstock})
	</insert>
	
	<!-- 카트 리스트 -->
	<select id="cartList" resultType="com.example.spring03.domain.CartListVO">
		select row_number() over(order by c.cartnum desc) as num, c.cartnum, c.userid, c.gdsnum, c.cartstock, c.adddate, g.gdsname, g.gdsprice, g.gdsthumbimg
		from tbl_cart c inner join tbl_goods g on c.gdsnum = g.gdsnum where c.userid = #{userid}
	</select>
	
	<!-- 카트 리스트 삭제 -->
	<delete id="cartDelete" parameterType="com.example.spring03.domain.CartVO">
		delete from tbl_cart where cartnum = #{cartnum} and userid = #{userid}
	</delete>
	
	<!-- 주문 시 상품 수량 조절 -->
	<update id="changeStock" parameterType="com.example.spring03.domain.OrderVO">
		update tbl_goods set gdsstock = gdsstock - #{gdsstock} where gdsnum = #{gdsnum}
	</update>
	
	<!-- 주문 정보 -->
	<insert id="orderInsert" parameterType="com.example.spring03.domain.OrderVO">
		insert into tbl_order (orderid, userid, orderrec, useraddr1, useraddr2, useraddr3, orderph, amount)
		values (#{orderid}, #{userid}, #{orderrec}, #{useraddr1}, #{useraddr2}, #{useraddr3}, #{orderph}, #{amount})
	</insert>
	
	<!-- 주문 상세 정보 -->
	<insert id="orderDetails" parameterType="com.example.spring03.domain.OrderDetailsVO">
		insert into tbl_order_details (orderdetailsnum, orderid, gdsnum, cartstock)
			select tbl_order_details_seq.nextval, #{orderid}, gdsnum, cartstock from tbl_cart
	</insert>
	
	<!-- 주문 후 카트 비우기 -->
	<delete id="orderAftDel" parameterType="com.example.spring03.domain.OrderVO">
		delete tbl_cart where userid=#{userid}
	</delete>
	
	<!-- 특정 유저의 주문 목록 -->
	<select id="orderList" resultType="com.example.spring03.domain.OrderVO">
		select orderid, userid, orderrec, useraddr1, useraddr2, useraddr3, orderph, amount, orderdate from tbl_order where userid = #{userid}
	</select>
	
	<!-- 특정 주문 목록 -->
	<select id="orderView" resultType="com.example.spring03.domain.OrderListVO">
		select o.orderid, o.userid, o.orderrec, o.useraddr1, o.useraddr2, o.useraddr3, o.orderph, o.amount, o.orderdate,
					d.orderdetailsnum, d.gdsnum, d.cartstock,
					g.gdsname, g.gdsthumbimg, g.gdsprice from tbl_order o 
		inner join tbl_order_details d on o.orderid = d.orderid
		inner join tbl_goods g on d.gdsnum = g.gdsnum
		where o.userid = #{userid} and o.orderid = #{orderid}
	</select>
	
</mapper>